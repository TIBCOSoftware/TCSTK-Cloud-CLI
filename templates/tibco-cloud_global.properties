# suppress inspection "UnusedProperty" for whole file
Cloud_Properties_Version=V2
# |------------------------------------------------|
# |  T I B C O    C L O U D   P R O P E R T I E S  |
# |      Settings to mange the TIBCO Cloud         |
# |------------------------------------------------|

# -------------------------------
#  AUTHENTICATION AND ENVIRONMENT
# -------------------------------
# Cloud Login Details
CloudLogin.clientID=USE-GLOBAL
CloudLogin.email=USE-GLOBAL
# Leave Password blank to enter on the console (or get it obfuscated)
CloudLogin.pass=USE-GLOBAL
# OAUTH key to use (Tibco Cloud -> Settings -> OAuth access tokens)
CloudLogin.OAUTH_Token=USE-GLOBAL
# Name of the OAUTH token to be generated. (For rotation always end with _<number>, for example: _1)
CloudLogin.OAUTH_Generate_Token_Name=USE-GLOBAL
# Use:
#   US Cloud (Oregon) - US
#  EU Cloud (Ireland) - EU
#  AUS Cloud (Sydney) - AU
# Options: US | EU | AU
CloudLogin.Region=USE-GLOBAL
# Optional, if provided it uses a different cloud URL than cloud.tibco.com
# CloudLogin.Cloud_Location=cloud.tibco.com

# -------------------------------
#  WORKSPACE
# -------------------------------
# Workspace Details
App_Name=<YOUR APP NAME>
App_Type=Custom
Workspace_TMPFolder=./tmp/
# Use Debugging
Use_Debug=false

# ------------------------
#  BUILD
# ------------------------
# Build command to use: Options: HASHROUTING | NON-HASHROUTING | <a custom command (example: ng build --prod )>
BUILD_COMMAND=NON-HASHROUTING
# On the build should a cloud descriptor file need to be added (this can also be done manually with the "tcli generate-cloud-descriptor" command).
# Allowed values: (YES | NO)
Add_Descriptor=YES
# Add a timestamp to the version in the descriptor (for example 1.0.01591605316)
# Allowed values: (YES | NO)
Add_Descriptor_Timestamp=YES
# Location of the descriptor file
Descriptor_File=./src/assets/cloudstarter.json

# ------------------------
#  LIBRARY
# ------------------------
# GIT Repository Locations
GIT_Source_TCSTLocation=https://github.com/TIBCOSoftware/TCSDK-Angular
# Use the LATEST tag for the latest version, use TCSTK-Angular-Full-V1.0.3 for the latest released version
GIT_Tag_TCST=LATEST
#GIT_Tag_TCST=TCSTK-Angular-Full-V1.0.3
TCSTLocation=./tmp/TCSDK-Angular/
TCSTDebugPackages=@tibco-tcstk/tc-core-lib @tibco-tcstk/tc-forms-lib @tibco-tcstk/tc-liveapps-lib

# ------------------------
#  OAUTH
# ------------------------
# Comma separated list of tenants for which the OAUTH Token gets generated. (Options: TSC,BPM,TCDS,TCE,TCI,TCM)
#       TSC: General Cloud Authentication
#       BPM: LiveApps Authentication
#      TCDS: TIBCO Cloud Data Streams Authentication
#       TCE: TIBCO Cloud Events Authentication
#       TCI: TIBCO Cloud Integration Authentication
#  SPOTFIRE: TIBCO Cloud Spotfire Authentication
#       TCM: TIBCO Cloud Messaging Authentication
# NOTE: You need to be part of the specified subscription.
CloudLogin.OAUTH_Generate_For_Tenants=USE-GLOBAL
# Number of Hours the generated OAUTH token should be valid.
CloudLogin.OAUTH_Generate_Valid_Hours=USE-GLOBAL
# Number of hours that the OAUTH Token should be valid for (168 hours is 1 week), Checked on Startup and on with the validate-and-rotate-oauth-token task.
CloudLogin.OAUTH_Required_Hours_Valid=USE-GLOBAL

# ------------------------
#  SHARED STATE
# ------------------------
# Filter for the shared state to manage (all shared states starting with this value will be managed)
#  Use ''(empty) or APPLICATION for the current application. Use * for all values, or use a specific value to apply a filter.
#  ( <Filter> | APPLICATION | * )
Shared_State_Filter=APPLICATION
# The type of shared state to look at (PUBLIC | SHARED | PRIVATE)
Shared_State_Type=PUBLIC
# Folder used for Shared State imports and exports
# NOTE: You can use ~{ORGANIZATION}, to use the current organization name in your folder. For Example:
#Shared_State_Folder=./Shared_State (~{ORGANIZATION})/
Shared_State_Folder=./Shared_State/
# Double check actions on shared state (YES | NO)
Shared_State_Double_Check=YES

# ------------------------
#  LIVE APPS CASES
# ------------------------
# Properties for Case Management
# NOTE: You can use ~{ORGANIZATION}, to use the current organization name in your folder. For Example:
#Case_Folder=./Cases (~{ORGANIZATION})/
Case_Folder=./Cases/

# ------------------------
#  CLOUD FILES
# ------------------------
# Local folder used to download and upload Cloud Files to
# NOTE: You can use ~{ORGANIZATION}, to use the current organization name in your folder. For Example:
#Cloud_File_Folder=./Cloud_Files (~{ORGANIZATION})/
Cloud_File_Folder=./Cloud_Files/

# ------------------------
#  TABLE EXPORTS
# ------------------------
# Export tables to CSV files. Possible values YES | NO
Table_Export_To_CSV=NO
# Folder to export the CSV files to.
Table_Export_Folder=./table-exports/
# Prfix to use for the export to table CSV files.
Table_Export_File_Prefix=table-export-
# Which tables to export, Possible values: ALL (OR any of):
#    tibco-cloud-properties,cloud-starters,cloud-starter-links,cloud-starter-details,
#    live-apps,live-apps-groups,live-apps-users,live-apps-groups-users,live-apps-folder-folder-content
#    shared-states,tci-apps,spotfire-reports
Table_Export_Tables=ALL

# ------------------------
#  TCI
# ------------------------
# The location of the TIBCLI Executable (including the executable name, for example: /folder/tibcli)
TIBCLI_Location=tibcli

# ------------------------
#  SPOTFIRE
# ------------------------
# The location in the library to search from.
#  NOTE: You can use ~{ORGANIZATION}, to use the current organization name in library base. (For example: /Teams/~{ORGANIZATION} ).
#  NOTE: Do not end this folder with a '/' character
Spotfire_Library_Base=/Teams/~{ORGANIZATION}
# This setting indicates when an item is copied in the library and the target location exists, it it needs to be added with a new name.
# So for example: Analysis_DXP (2), if set to NO the copy action will be ignored and a warning is given. Possible Values (YES | NO)
Spotfire_Do_Copy_With_New_Name=NO

# ------------------------
#  RECORDER
# ------------------------
# The recorder allows you to store executed tcli commands into an (executable) file, so you can replay these commands.
# Do you want to use the recorder; this enables the display or replay commands.
#  Note: this does not mean that you are recoding directly (YES | NO)
Recorder_Use=YES
# Setting to record from loading (YES | NO)
# Note: you can also start and stop recording with the start-recording and stop-recording command.
Recorder_Do_Record_From_Start=NO
# File that you want your recordings to go to
Recorder_File_To_Record_To=./tcli-recordings.sh
